import { aliasOperation, fetchReminderList } from '../utils';

describe('monthly reminders', () => {
  beforeEach(() => {
    cy.intercept('/v2/*/master', (req) => {
      aliasOperation(req, 'reminderLists', fetchReminderList.defaultReminderList);
    });

    cy.clock(new Date('2022, 6, 9'));
  });

  it('should have create reminder list functionality', () => {
    cy.intercept('/v2/*/master', (req) => {
      aliasOperation(req, 'createReminderList', { body: { data: {} } });
    });

    cy.visit('/');

    cy.findByRole('link', { name: 'Bills' })
      .should('be.visible')
      .should('have.attr', 'href', '/list/ckx80plqwibd50c20hgqhfgz2');

    cy.findByRole('textbox', { name: 'title' }).should('not.exist');
    cy.findByRole('button', { name: 'Create a reminder list' }).click();
    cy.findByRole('textbox', { name: 'title' }).type('Example List');
    cy.findByRole('button', { name: 'Create list' }).click();
    cy.findByRole('textbox', { name: 'title' }).should('not.exist');

    cy.wait('@createReminderList').gqlAssertBody(
      `mutation createReminderList {
        createReminderList(data: { title: "Example List" }) {
          id
        }
      }`
    );
  });

  it('should display reminder list information', () => {
    cy.visit('/list/ckx80plqwibd50c20hgqhfgz2');

    cy.findByRole('heading', { name: 'Bills' }).should('be.visible');
    cy.findByRole('row', { name: 'Rent 2 www.rent.com late Remove Finish' });
    cy.findByRole('row', { name: 'Power 12 www.power.com due Remove Finish' });
    cy.findByRole('row', { name: 'Internet 2 www.internet.com done Remove Unfinish' });
  });

  it('should have reminder list status actions', () => {
    cy.intercept('/v2/*/master', (req) => {
      aliasOperation(req, 'updateReminder', { body: { data: {} } });
      aliasOperation(req, 'deleteReminder', { body: { data: {} } });
    });
    cy.visit('/list/ckx80plqwibd50c20hgqhfgz2');

    cy.findByRole('row', { name: 'Rent 2 www.rent.com late Remove Finish' })
      .findByRole('button', { name: 'Finish' })
      .click();

    cy.wait('@updateReminder').gqlAssertBody(`
      mutation updateReminder {
        updateReminder(data: {completed: true}, where: {id: "ckx80pxbkijp30b20xh0551yi"}) {
          id
        }
      }`);

    cy.findByRole('row', { name: 'Rent 2 www.rent.com late Remove Finish' })
      .findByRole('button', { name: 'Remove' })
      .click();

    cy.wait('@deleteReminder').gqlAssertBody(`
      mutation deleteReminder {
        deleteReminder(where: {id: "ckx80pxbkijp30b20xh0551yi"}) {
          id
        }
      }`);

    cy.findByRole('row', { name: 'Internet 2 www.internet.com done Remove Unfinish' })
      .findByRole('button', { name: 'Unfinish' })
      .click();
    cy.wait('@updateReminder').gqlAssertBody(`
      mutation updateReminder {
        updateReminder(data: {completed: false}, where: {id: "cl47b83avp26y0bk2qx95b8f3"}) {
          id
        }
      }`);
  });

  it('should create a new reminder list item', () => {
    cy.intercept('/v2/*/master', (req) => {
      aliasOperation(req, 'createReminder', { body: { data: {} } });
    });
    cy.visit('/list/ckx80plqwibd50c20hgqhfgz2');

    cy.findByRole('textbox', { name: 'title' }).should('not.exist');
    cy.findByRole('button', { name: 'Create Reminder Item' }).click();
    cy.findByRole('textbox', { name: 'title' }).type('titleText');
    cy.findByRole('spinbutton', { name: 'due' }).type('3');
    cy.findByRole('textbox', { name: 'notes' }).type('notesText');

    cy.findByRole('button', { name: 'Create reminder' }).click();
    cy.wait('@createReminder').gqlAssertBody(`
      mutation createReminder {
        createReminder(
          data: {
            title: "titleText"
            notes: "notesText"
            due: 3
            completed: false
            ckvr68ntz0dou01z9hvi5h3bz:{connect:{id:"ckx80plqwibd50c20hgqhfgz2"}}}
        ) {
          id
        }
      }`);
  });

  it('should delete a reminder list', () => {
    cy.intercept('/v2/*/master', (req) => {
      aliasOperation(req, 'deleteReminderList', { body: { data: {} } });
    });
    cy.visit('/list/ckx80plqwibd50c20hgqhfgz2');

    cy.wait('@reminderLists');
    cy.findByRole('button', { name: 'Delete Reminder List' }).click();
    cy.wait('@deleteReminderList').gqlAssertBody(`
      mutation deleteReminderList {
        deleteReminderList(where: {id: "ckx80plqwibd50c20hgqhfgz2"}) {
          id
        }
      }
    `);
  });

  it('should show error on fetch reminder lists failure', () => {
    cy.intercept('/v2/*/master', (req) => {
      aliasOperation(req, 'reminderLists', { statusCode: 500 });
    });
    cy.visit('/');
  });
});

const defaultReminderList = {
  data: {
    reminderLists: [
      {
        id: 'ckx80plqwibd50c20hgqhfgz2',
        title: 'Bills',
        reminders: [
          {
            id: 'ckx80pxbkijp30b20xh0551yi',
            title: 'Rent',
            due: 2,
            notes: 'www.rent.com',
            completed: false,
          },
          {
            id: 'ckx80vipkiov30b20t4wa3agr',
            title: 'Power',
            due: 12,
            notes: 'www.power.com',
            completed: false,
          },
          {
            id: 'cl47b83avp26y0bk2qx95b8f3',
            title: 'Internet',
            due: 2,
            notes: 'www.internet.com',
            completed: true,
          },
        ],
      },
    ],
  },
};
